{"version":1,"ops":[{"type":1,"author":{"id":"d94491c6df6dc52f4e132989f7ed217c066eb2cc"},"timestamp":1400219854,"metadata":{"github-id":"MDU6SXNzdWUzMzY0OTYyMA==","github-url":"https://github.com/rurban/B-Stats/issues/3","origin":"github"},"title":"-r is broken/bogus stats","message":"```\nC:\\sources\\B-Stats\u003eperl -MB::Stats-r Makefile.pl\n\nB::Stats static compile-time:\nfiles=1 lines=339   ops=54652\n\nop name:\nnull        8802\npadsv       6894\nconst       5796\nnextstate   4824\npushmark    2744\npadrange    1729\nconcat      1655\nhelem       1477\nrv2hv       1462\nsassign     1421\ngv          1391\nentersub    1108\nand         1098\nlineseq     895\npadav       774\ngvsv        684\nenter       672\nleave       671\naassign     646\nor          641\nrv2av       575\nscope       545\nleavesub    535\nmethod_named    533\ncond_expr   521\nreturn      519\npadhv       357\nmatch       303\npush        254\nseq         227\nleaveloop   217\nshift       214\nunstack     208\nsubst       201\ndefined     198\nenteriter   169\niter        169\norassign    164\nnot         122\njoin        121\nrefgen      104\nlist        103\nprint       101\nnext        91\nrv2gv       87\nanonlist    83\nlength      78\neq          78\nanonhash    74\nmapstart    73\nmapwhile    73\nwarn        72\nrequire     69\nexists      63\nkeys        56\ngrepstart   54\ngrepwhile   54\nregcomp     53\naelemfast   53\nref         52\nftfile      51\ndie         49\nsprintf     48\nenterloop   48\nstringify   45\nrv2cv       44\nstub        43\naelem       42\nlast        38\nsplit       38\npushre      38\nsort        38\nftdir       38\nlslice      35\naelemfast_lex   34\nrv2sv       34\nsne         29\ncaller      28\nleavetry    27\nentertry    27\nundef       26\nbit_and     26\nuc          26\ndelete      26\nadd         24\nhslice      24\nscalar      22\nsubstr      21\nschomp      21\nsrefgen     21\nge          21\nmethod      20\npreinc      20\nquotemeta   18\nchdir       18\nbacktick    18\nbit_or      17\ngt          17\nlc          16\nlt          16\ngoto        16\ngelem       16\nunshift     15\nrepeat      14\nanoncode    14\nftis        13\nne          13\npop         12\nredo        12\nsubtract    11\nvec         11\nchmod       11\neach        11\nstat        11\nopen        11\nclose       10\nindex       10\nschop       10\nwantarray   10\nftlink      10\nreadline    10\nclosedir    9\npostinc     9\nregcmaybe   9\nav2arylen   8\ntrans       8\nreadlink    8\nreaddir     7\nvalues      7\nfteread     7\nlstat       6\nbless       6\npredec      6\nopen_dir    6\nunlink      6\nftsize      5\nrange       5\nflop        5\naslice      5\nflip        5\ndofile      4\nentereval   4\nfttty       4\nsplice      4\nqr          3\nftewrite    3\nmodulo      3\nscmp        3\ncomplement  3\ndor         3\nfteexec     2\nlocaltime   2\nle          2\ngpwnam      2\neof         2\nggrnam      2\nrename      2\nselect      2\nexit        2\nreverse     2\nftchr       2\nsystem      2\nucfirst     2\nright_shift 1\npostdec     1\nrewinddir   1\nmultiply    1\nprtf        1\nmkdir       1\nint         1\nexec        1\nchown       1\nslt         1\ntms         1\nrmdir       1\nseek        1\nchomp       1\nsgt         1\n\nop class:\nOP          15643\nUNOP        12472\nSVOP        6343\nBINOP       5850\nCOP         4824\nLISTOP      3953\nLOGOP       2639\nPADOP       2149\nPMOP        545\nLOOP        217\nPVOP        17\nGenerating a nmake-style Makefile\nWriting Makefile for B::Stats\nWriting MYMETA.yml and MYMETA.json\n\nB::Stats static end-time:\nfiles=58    lines=31571 ops=86409\n\nop name:\nnull        14383\npadsv       10953\nconst       8253\nnextstate   7760\npushmark    4396\npadrange    2506\ngv          2368\nsassign     2218\nconcat      2157\nrv2hv       2110\nhelem       2036\nentersub    1980\nand         1771\nlineseq     1550\nrv2av       1203\ngvsv        1178\nenter       1164\nleave       1163\nor          1012\nreturn      1008\nleavesub    986\npadav       961\ncond_expr   911\nmethod_named    908\naassign     903\nscope       836\nmatch       458\npadhv       438\ndefined     405\nseq         394\nleaveloop   349\nunstack     335\naelem       320\npush        315\nshift       314\nsubst       276\niter        249\nenteriter   249\naelemfast   239\nnot         200\norassign    188\nrefgen      170\nref         157\nlength      148\nanonlist    143\nnext        143\njoin        142\nlist        141\nrv2gv       137\nanonhash    132\neq          125\nrequire     119\nexists      116\nundef       110\nprint       104\nenterloop   100\nkeys        100\ndie         97\nmapwhile    92\nmapstart    92\nregcomp     90\nwarn        81\ngrepwhile   75\ngrepstart   75\nrv2cv       74\nrv2sv       68\nstringify   66\nlast        64\nsubstr      64\nstub        63\naelemfast_lex   62\nsprintf     61\nadd         61\nqr          55\nftfile      53\nentertry    52\nleavetry    52\nsne         49\ngt          47\ndelete      46\nsort        45\nftdir       44\nbit_and     44\nlslice      41\nsplit       41\npushre      41\nsrefgen     40\nlt          39\nlc          36\ncaller      35\npreinc      34\nge          33\nsubtract    31\nanoncode    30\nbless       29\nchdir       27\nscalar      26\nhslice      26\nuc          26\nmethod      26\nquotemeta   22\nbit_or      22\nrepeat      21\npredec      21\nschomp      21\npostinc     20\nne          19\nbacktick    18\ngoto        18\nwantarray   18\npop         18\ngelem       17\nunshift     17\nopen        15\neach        15\nle          15\nftis        14\nindex       14\nclose       13\nvec         13\nreadline    12\nredo        12\nftlink      12\nstat        12\nlstat       12\nchmod       11\nclosedir    11\nav2arylen   11\nschop       10\nregcmaybe   9\nfteread     9\naslice      9\nreadlink    9\nreaddir     9\nvalues      8\nopen_dir    8\nhex         8\ntrans       8\nchr         8\ncomplement  7\nsplice      7\nscmp        7\nunpack      7\nentereval   7\nunlink      6\nflip        5\nflop        5\nftsize      5\nrange       5\nmodulo      4\npack        4\ndofile      4\nfttty       4\nucfirst     3\nsge         3\ndor         3\nftewrite    3\nmultiply    3\nord         3\nsystem      2\nreverse     2\nftchr       2\nseek        2\nrename      2\nrindex      2\nggrnam      2\nint         2\nexit        2\nselect      2\nflock       2\nfteexec     2\npos         2\npostdec     2\neof         2\ngpwnam      2\nlocaltime   2\nrmdir       1\ntms         1\nsysopen     1\nchomp       1\nsgt         1\nexec        1\nslt         1\nchown       1\nprtf        1\nmkdir       1\nsle         1\nleavesublv  1\ndivide      1\nright_shift 1\nbinmode     1\ntruncate    1\noct         1\nrewinddir   1\n\nop class:\nOP          24430\nUNOP        20639\nSVOP        9191\nBINOP       8775\nCOP         7760\nLISTOP      6395\nLOGOP       4199\nPADOP       3815\nPMOP        830\nLOOP        349\nPVOP        26\n\nB::Stats dynamic run-time:\nfiles=60    lines=322   ops=7\n\nop name:\nnextstate   7\n\nop class:\nCOP         7\n```\n\n7 ops? really? The op counter is not in the op loop. https://github.com/rurban/B-Stats/blob/master/Stats.xs#L57 Its just recording the 1st op of every entry into the runloop. Putting a breakpoint on the op ++ line gives a callstack of,\n\n```\n    ntdll.dll!_DbgBreakPoint@0()    \n\u003e   Stats.dll!my_runops(interpreter * my_perl=0x00364d2c)  Line 166 C\n    perl519.dll!Perl_call_sv(interpreter * my_perl=0x00364d2c, sv * sv=0x00d823dc, volatile long flags=13)  Line 2771 + 0xc C\n    perl519.dll!Perl_call_list(interpreter * my_perl=0x00364d2c, long oldscope=8, av * paramList=0x00b9ceec)  Line 4873 C\n    perl519.dll!S_process_special_blocks(interpreter * my_perl=0x00070023, long floor=113, const char * const fullname=0x009059a8, gv * const gv=0x00d7c1cc, cv * const cv=0x00d823dc)  Line 8063   C\n    perl519.dll!Perl_newATTRSUB_x(interpreter * my_perl=0x00000000, long floor=113, op * o=0x00991c88, op * proto=0x00000000, void * attrs=0x2802cee5, op * block=0x0123bda4, char o_is_gv=0)  Line 8023 + 0x13 C\n    perl519.dll!Perl_utilize(interpreter * my_perl=0x00000000, int aver=1, long floor=113, op * version=0x00000000, op * idop=0x00d8238c, op * arg=0x00000000)  Line 5440 + 0x7b    C\n    perl519.dll!Perl_yyparse(interpreter * my_perl=0x00364d2c, int gramtype=1)  Line 398 + 0x16 C\n    perl519.dll!S_doeval(interpreter * my_perl=0x00364d2c, int gimme=2, cv * outside=0x00000000, unsigned long seq=311, hv * hh=0x00000000)  Line 3488  C\n    perl519.dll!Perl_pp_require(interpreter * my_perl=0x00000000)  Line 4145 + 0x21 C\n    perl519.dll!Perl_runops_standard(interpreter * my_perl=0x00364d2c)  Line 42 + 0x4   C\n    perl519.dll!Perl_call_sv(interpreter * my_perl=0x00364d2c, sv * sv=0x00d823dc, volatile long flags=13)  Line 2771 + 0xc C\n    perl519.dll!Perl_call_list(interpreter * my_perl=0x00364d2c, long oldscope=1, av * paramList=0x00986364)  Line 4873 C\n    perl519.dll!perl_run(interpreter * my_perl=0x00364d2c)  Line 2382 + 0x12    C\n    perl519.dll!RunPerl(int argc=3, char * * argv=0x01364c68, char * * env=0x00363328)  Line 258 + 0x6  C\n    perl.exe!mainCRTStartup()  Line 398 + 0xe   C\n    kernel32.dll!_BaseProcessStart@4()  + 0x23  \n```\n\nEvery single time that BP was hit, which is 7 times, it was inside pp_require and yy_parse. So even if the counter was moved to inside the do while loop, it won't profile most or any  runtime ops.","files":null}]}